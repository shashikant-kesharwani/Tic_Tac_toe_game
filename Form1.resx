<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAAGQAAADAAAAAtAAAAFgAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAABoAACFrAAAHiAAAAIIAAABVAAAAIgAAAAYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAABIiwAAYv8AAF/8AAAy1QAAAJoAAABeAAAAIgAA
        AAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAANAAAAHAAAABgAAAAAAAAAAAAATUEQFoP/Pk/T/zdGyv8NEX3/AAA63QAA
        AJkAAABWAAAAGQAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAAEwAAAD8AAABhAAAARgAAAAAAAAAAAABbeyw5u/9DVd//Q1Xf/z9R
        2/8QFob/AAAu1AAAAI4AAABDAAAADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAABMAACVfAABY6AAARtEAAABRAAAAAAAAAAAAAF5kJjS2/z1Q
        3v89UN7/PVDe/zlL1/8IC3P+AAAWvQAAAHcAAAArAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAQAAAwZwAAX/YLD3z/AAA6ugAAADQAAAAAAAAAAAAA
        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
        8AGAAfgBAAP8AQAH/gEAD/+BAD///4B///8=
</value>
  </data>
</root>